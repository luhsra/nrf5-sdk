diff --git a/meson.build b/meson.build
new file mode 100644
index 0000000..f57ca3b
--- /dev/null
+++ b/meson.build
@@ -0,0 +1,15 @@
+project('nrf5-llvm', 'c',
+  version : '0.1',
+  default_options : ['warning_level=3'])
+
+py3_mod = import('python')
+py3_inst = py3_mod.find_installation('python3')
+
+patches = files(
+  'error_handler.patch',
+  'isr_vector.patch',
+  'stack_ptr.patch',
+  'vmsr.patch'
+)
+
+nrfsvc_script = files('nrfsvc.py')
diff --git a/stack_ptr.patch b/stack_ptr.patch
index 66cf236..d4a5f76 100644
--- a/stack_ptr.patch
+++ b/stack_ptr.patch
@@ -1,13 +1,13 @@
 --- a/modules/nrfx/mdk/compiler_abstraction.h  2018-09-07 16:23:10.000000000 +0200
 +++ b/modules/nrfx/mdk/compiler_abstraction.h  2018-09-07 16:23:10.000000000 +0200
-@@ -115,13 +115,21 @@
-         #define __PACKED           __attribute__((packed))
+@@ -139,13 +139,21 @@
+         #define __PACKED           __attribute__((packed)) 
      #endif
-
+ 
 -    #define GET_SP()                gcc_current_sp()
 +    #if !defined(__clang__)
 +         #define GET_SP()                gcc_current_sp()
-
+ 
 -    static inline unsigned int gcc_current_sp(void)
 -    {
 -        register unsigned sp __ASM("sp");
@@ -18,12 +18,13 @@
 +             register unsigned sp __ASM("sp");
 +             return sp;
 +         }
-+   #else
++    #else
 +         #define GET_SP()                clang_current_sp()
 +         static inline unsigned int clang_current_sp(void)
 +         {
-+             return __builtin___get_unsafe_stack_ptr();
++             return (unsigned int) __builtin___get_unsafe_stack_ptr();
 +         }
-+   #endif
-
++    #endif
+ 
  #elif defined   ( __TASKING__ )
+ 
